# 必要な情報
・ノーツ情報(Eeccellent時間の配列)→難易度ごとに最後の時間は決まっている。つまり生成時に代入されるべき？
・acitiveになってからのカウントタイム

# 必要な処理


# 継承先での処理
・アニメーション処理
・押されたときの処理(主にアニメーション、音)

# プレイヤーが押したときの処理の流れ


# 必要な処理(めも)
・ノーツのアニメーション(見た目)
・押されたとき、目安から何秒ずれているかによって処理(余りに離れているときは何もしない)

Notesが生成された瞬間に、アニメーション再生開始。タイムカウント開始。

生成されるNotesはランダムである必要がある && Eeccellentで終わるまでの時間に運によるブレが無い必要がある(ただし難易度により変わっていい)

→ノーツの個数が種類で違うのは面倒
→複数のアニメーションを流すことはあるのか？







釣る魚の重さが同じなのに、釣るためにかかる最速時間が違ったらダメ
→釣る魚の重さによって、かかる最速時間を計算し、ランダムに選んだアニメーションの最速時間だけ設定する。(例: 最速時間0.5秒ごとに1ノーツ増やす、3.7秒→5個)
それぞれのノーツの時間配置をランダム配置(間隔があまりに短すぎてはダメ。)→これにEasing使えないか？？？
最速時間に応じたノーツの数を設定→これだと単調にならないか？？？

そもそも判定の良し悪しで何を変える？？→残り時間の加算だと差がつかない可能性が高い
スコアの加算なら明確に差が出る→これでよくね？？？

釣れる魚の重さに差はない(運要素では)。判定で加算スコア。ノーツ数は重さで決まっている。アニメーション(見た目)はランダムor魚の種類で決まる。
→時間制限にしないという手(一定回数ミスったらアウト。他の判定はスコアで出る)
→ミスったら記録が残らないという手もあり。→どこかで立ち止まる必要がある。
→最終的なスコアが残る。